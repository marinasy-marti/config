# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# General Aliases
alias ..='cd ..'
alias cp='cp -v'
alias rm='rm -Ir'
alias mv='mv -iv'
alias ln='ln -sriv'
alias xampp='/opt/lampp/lampp'
alias xclip='xclip -selection c'
command -v vim > /dev/null && alias vi='vim'

# Colorize commands
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias diff='diff --color=auto'
alias ip='ip --color=auto'
alias pacman='pacman --color=auto'

# LS & TREE
command -v lsd > /dev/null && alias ls='lsd --group-dirs first' && alias tree='lsd --tree'
command -v colorls > /dev/null && alias ls='colorls --sd --gs' && alias tree='colorls --tree'

# CAT & LESS
command -v bat > /dev/null && alias bat='bat --theme=ansi' && alias cat='bat --pager=never' && alias less='bat'
command -v batcat > /dev/null && alias batcat='batcat --theme=ansi' && alias cat='batcat --pager=never' && alias less='batcat'

# TOP
command -v htop > /dev/null && alias top='htop'
command -v gotop > /dev/null && alias top='gotop -p $([ "$COLOR_SCHEME" = "light" ] && echo "-c default-dark")'
command -v ytop > /dev/null && alias top='ytop -p $([ "$COLOR_SCHEME" = "light" ] && echo "-c default-dark")'
command -v btm > /dev/null && alias top='btm $([ "$COLOR_SCHEME" = "light" ] && echo "--color default-light")'
command -v bashtop > /dev/null && alias top='bashtop'
command -v bpytop > /dev/null && alias top='bpytop'

# Shell Options
shopt -s globstar
shopt -s histappend
shopt -s checkwinsize

# History Settings
HISTCONTROL=ignoreboth
HISTSIZE=5000
HISTFILESIZE=5000
HISTFILE="$HOME/.cache/bash_history"

# Bash Completion
if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
fi

# Prompt
OS_ICON=üëÄ
# For non-root users //separate root and non root will be completed when i will have time
if [ $(id -u) -eq 0 ]; then
    if [ "$TERM" == "screen" ] || [ "$TERM" == "linux" ]; then
        PS1='\[\033[;32m\]‚îå‚îÄ‚îÄ(\[\033[1;34m\]\u@\h\[\033[;32m\])-[\[\033[0;1m\]\w\[\033[;32m\]]\n\[\033[;32m\]‚îî‚îÄ\[\033[1;34m\]\#\[\033[0m\] '
    else
        OS_ICON=üëÄ
        PS1="\n \[\033[0;34m\]‚ï≠‚îÄ\[\033[0;31m\]ÓÇ≤\[\033[0;37m\]\[\033[41m\] $OS_ICON \u \[\033[0m\]\[\033[0;31m\]\[\033[44m\]ÓÇ∞\[\033[0;34m\]\[\033[44m\]\[\033[0;30m\]\[\033[44m\] \w \[\033[0m\]\[\033[0;34m\]ÓÇ∞ \n \[\033[0;34m\]‚ï∞üëâ \[\033[1;36m\]# \[\033[0m\]"
    fi  
else
    if [ "$TERM" == "screen" ] || [ "$TERM" == "linux" ]; then
        PS1='\[\033[;32m\]‚îå‚îÄ‚îÄ(\[\033[1;38m\]\u@\h\[\033[;32m\])-[\[\033[0;1m\]\w\[\033[;32m\]]\n\[\033[;32m\]‚îî‚îÄ\[\033[1;34m\]\$\[\033[0m\] '
    else
        OS_ICON=üëÄ
        PS1="\n \[\033[0;34m\]‚ï≠‚îÄ\[\033[1;31m\]ÓÇ≤\[\033[0;37m\]\[\033[41m\] $OS_ICON \u \[\033[0m\]\[\033[0;31m\]\[\033[44m\]ÓÇ∞\[\033[0;34m\]\[\033[44m\]\[\033[0;30m\]\[\033[44m\] \w \[\033[0m\]\[\033[0;34m\]ÓÇ∞ \n \[\033[0;34m\]‚ï∞üëâ \[\033[1;36m\]\$ \[\033[0m\]"
    fi  
fi

# Misc Settings
export VISUAL=vim
export EDITOR=$VISUAL
setterm -linewrap on 2> /dev/null
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'
export LESSHISTFILE=-

# Colorize ls
[ -x /usr/bin/dircolors ] && eval "$(dircolors -b)"

# Terminal Title
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
esac

# Custom Functions

lazygit() {
    USAGE="
    lazygit [OPTION]... <msg>

    GIT but lazy

    Options:
        --fixup <commit>        runs 'git commit --fixup <commit> [...]'
        --amend                 runs 'git commit --amend --no-edit [...]'
        -f, --force             runs 'git push --force-with-lease [...]'
        -h, --help              show this help text
    "
    while [ $# -gt 0 ]
    do
        case "$1" in
            --fixup) COMMIT="$2"; shift; shift ;;
            --amend) AMEND=true; shift ;;
            -f|--force) FORCE=true; shift ;;
            -h|--help) echo "$USAGE"; EXIT=true; ;;
            *) MESSAGE="$1"; shift ;;
        esac
    done
    if [ -z "$EXIT" ]; then
        git status .
        git add .
        if [ -n "$AMEND" ]; then
            git commit --amend --no-edit
        elif [ -n "$COMMIT" ]; then
            git commit --fixup "$COMMIT"
            GIT_SEQUENCE_EDITOR=: git rebase -i --autosquash "$COMMIT"^
        else
            git commit -m "$MESSAGE"
        fi
        git push origin HEAD $([ -n "$FORCE" ] && echo '--force-with-lease')
    fi
}

glog() {
    setterm -linewrap off 2> /dev/null
    git --no-pager log --all --color=always --graph --abbrev-commit --decorate --date-order \
        --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' "$@" \
        | sed -E \
            -e 's/\|(\x1b\[[0-9;]*m)+\\(\x1b\[[0-9;]*m)+ /‚îú\1‚îÄ‚ïÆ\2/' \
            -e 's/(\x1b\[[0-9;]+m)\|\x1b\[m\1\/\x1b\[m /\1‚îú‚îÄ‚ïØ\x1b\[m/' \
            -e 's/\|(\x1b\[[0-9;]*m)+\\(\x1b\[[0-9;]*m)+/‚îú\1‚ïÆ\2/' \
            -e 's/(\x1b\[[0-9;]+m)\|\x1b\[m\1\/\x1b\[m/\1‚îú‚ïØ\x1b\[m/' \
            -e 's/‚ïÆ(\x1b\[[0-9;]*m)+\\/‚ïÆ\1‚ï∞‚ïÆ/' \
            -e 's/‚ïØ(\x1b\[[0-9;]*m)+\//‚ïØ\1‚ï≠‚ïØ/' \
            -e 's/(\||\\)\x1b\[m   (\x1b\[[0-9;]*m)+\1/\x1b\1‚îê\2‚îò' 
}

